{"version":3,"sources":["app.js","portfolio.ctr.js","share-listener.fac.js"],"names":["app","angular","module","config","$mdThemingProvider","theme","primaryPalette","accentPalette","directive","scope","restrict","templateUrl","onContactClick","onHireMeClick","link","elm","attrs","images","JSON","parse","selectedImage","selectImage","index","PortfolioCtrl","$scope","$http","$mdSidenav","$mdMedia","ShareListener","$cookies","$location","$anchorScroll","get","then","response","projects","data","shareButtonListener","listener","copyToClipboard","nightMode","documentLoaded","cardToggle","selectedCardIndex","undefined","selectedCard","yOffset","toggleSocialLinks","showSocialLinks","isOpen","toggle","togglePeoplePerHourWidget","showPeoplePerHourWidget","$watch","selectCard","$event","$index","hash","cancelBubble","onFavouriteClick","_this","currentTarget","iconContent","children","textContent","console","log","toggleSideNav","controller","$inject","factory","$mdToast","str","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","show","simple","hideDelay","preventDefault","navigator","share","title","text","url","href","error"],"mappings":"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","file":"portfolio-bundle.min.js","sourcesContent":["let app = angular.module('Portfolio', ['ngMaterial', 'ngCookies', 'ngAnimate']);\n    \napp\n.config(function($mdThemingProvider) {\n    $mdThemingProvider.theme('default')\n        .primaryPalette('deep-purple')\n        .accentPalette('green');\n})\n.directive('svgLogo', function() {\n    return {\n        scope: false,\n        restrict: 'E',\n        templateUrl: './../partials/compressed/svgLogo.html'\n    }\n})\n.directive('socialLinks', function() {\n    return {\n        scope: false,\n        restrict: 'E',\n        templateUrl: '/partials/compressed/socialLinks.html'\n    }\n})\n.directive('sideNavList', function() {\n    return {\n        scope: {\n            onContactClick: '&',\n            onHireMeClick: '&'\n        },\n        restrict: 'E',\n        templateUrl: '/partials/compressed/sidenavList.html',\n    }\n})\n.directive('imagePicker', function() {\n    return {\n        scope: false,\n        restrict: 'E',\n        templateUrl: '/partials/compressed/imagePicker.html',\n        link: function(scope, elm, attrs) {\n            if (!attrs.images) return;\n            scope.images = JSON.parse(attrs.images);\n            scope.selectedImage = 0;\n            scope.selectImage = function(index) {\n                scope.selectedImage = index;\n            }\n        }\n    }\n})\n.directive('frameworksImages', function() {\n    return {\n        scope: false,\n        restrict: 'E',\n        templateUrl: '/partials/compressed/frameworksImages.html',\n        link: function(scope, elm, attrs) {\n            if (!attrs.images) return;\n            scope.images = JSON.parse(attrs.images);\n        }\n    }\n});\n","(function(){\n    'use strict';\n\n    angular\n        .module('Portfolio')\n        .controller('PortfolioCtrl', PortfolioCtrl);\n\n    PortfolioCtrl.$inject = [\"$scope\", \"$http\", \"$mdSidenav\", \"$mdMedia\", \"ShareListener\", \"$cookies\", '$location', \"$anchorScroll\"];\n\n    function PortfolioCtrl($scope, $http, $mdSidenav, $mdMedia, ShareListener, $cookies, $location, $anchorScroll) {\n        $http.get('projects-data.json').then(function(response) {\n            $scope.projects = response.data;\n        });\n        $scope.$mdMedia = $mdMedia;\n        $scope.shareButtonListener = ShareListener.listener;\n        $scope.copyToClipboard = ShareListener.copyToClipboard;\n        $scope.nightMode = false;\n        $scope.documentLoaded = false;\n        $scope.cardToggle = false;\n        $scope.selectedCardIndex = undefined;\n        $scope.selectedCard = undefined;\n        $anchorScroll.yOffset = 50;\n\n        $scope.toggleSocialLinks = function() {\n            $scope.showSocialLinks = !$scope.showSocialLinks;\n            // close side nav if open\n            if ($mdSidenav('left').isOpen) {\n                $mdSidenav('left').toggle();\n            }\n        };\n        $scope.togglePeoplePerHourWidget = function() {\n            $scope.showPeoplePerHourWidget = !$scope.showPeoplePerHourWidget;\n            // close side nav if open\n            if ($mdSidenav('left').isOpen) {\n                $mdSidenav('left').toggle();\n            }\n        }\n\n        $scope.$watch('$viewContentLoaded', function(){\n            const isNightModePreferred = $mdMedia('(prefers-color-scheme: dark)');\n            if (isNightModePreferred) {\n                $scope.nightMode = true;\n            }\n            $scope.documentLoaded = true;\n        });\n\n        $scope.selectCard = function($event, $index) {\n            if ($scope.selectedCardIndex != $index) {\n                // select card\n                $scope.selectedCard = $scope.projects[$index];\n                $scope.selectedCardIndex = $index;\n                // scroll to top of card\n                $location.hash(\"project\" + $index);\n                $anchorScroll();\n            } else {\n                // unselect card\n                $scope.selectedCardIndex = undefined;\n                $scope.selectedCard = undefined;\n            }\n            $event.cancelBubble = true; // prevent from firing again\n        }\n\n        $scope.onFavouriteClick = function($event) {\n            // TODO: Add animation transition\n            let _this = $event.currentTarget;\n            let iconContent = _this.children[0].textContent;\n            console.log(iconContent);\n            if (iconContent == 'favorite') {\n                _this.children[0].textContent = 'favorite_border';\n            } else {\n                _this.children[0].textContent = 'favorite';\n            }\n            $event.cancelBubble = true; // prevent the card from toggling\n        }\n\n        $scope.toggleSideNav = function() {\n            $mdSidenav('left').toggle();\n        }\n    }\n\n})();","(function(){\n    'use strict';\n\n    angular\n        .module('Portfolio')\n        .factory('ShareListener', [\"$mdToast\", function($mdToast) {\n            const copyToClipboard = function(str) {\n                const el = document.createElement('textarea');\n                el.value = str;\n                document.body.appendChild(el);\n                el.select();\n                document.execCommand('copy');\n                document.body.removeChild(el);\n                // show Toast message\n                $mdToast.show(\n                    $mdToast.simple()\n                    .textContent('Link copied to clipboard!')\n                    .hideDelay(2000)      \n                );\n            };\n\n            function listener($event) {\n                $event.preventDefault();\n                //cancel bubble\n                let _this = $event.currentTarget;\n                if (navigator.share) {\n                    navigator.share({\n                        title: 'CharisTheo',\n                        text: _this.children[0].textContent,\n                        url: _this.href,\n                    })\n                    .then(() => console.log('Successful share'))\n                    .catch((error) => console.log('Error sharing', error));\n                } else {\n                    // No share API found!\n                    // copy link to clipboard\n                    copyToClipboard(_this.href);\n                }\n                $event.cancelBubble = true; // prevent the card from toggling\n            }\n\n            return {\n                listener: listener,\n                copyToClipboard: copyToClipboard\n            }\n        }]);\n}());"]}