[
    {
        "title": "PWA Recipes",
        "id": "pwa-recipes",
        "subtitle": "PWA examples for every web-app",
        "description": "These templates/examples were created to help accelerate the adoption of PWAs in general and the e-commerce sector in specific where various PWA capabilities apply. Some of those capabilities could be: installing the web app (Add to Home screen) to capture the user's device real estate, saving and synchronising offline add-to-cart requests, sending push notifications in the right context for higher user retention and conversion, detecting and prompting the user when has abandoned his/her shopping cart before checkout.",
        "tools_used": ["Service Workers", "Workbox", "Webpack", "Push Notifications", "Background Sync", "IndexDB", "Polymer 3"],
        "url": "https://pwa.recipes/",
        "github_repo_name": "pwa-recipes",
        "share_description": "PWA Recipes ü•ò for every chef developer üë®‚Äçüç≥üë©‚Äçüç≥",
        "frameworksImages": [
            {"src": "/img/logos/workbox-logo.svg"},
            {"src": "/img/logos/pwa-logo.svg"}
        ],
        "animation": {
            "webm" : "/img/screenshots/pwa-recipes/TODO:.webm",
            "mp4" : "/img/screenshots/pwa-recipes/TODO:.mp4"
        },
        "images": [
            {
                "src": "/img/screenshots/pwa-recipes/homepage.webp",
                "fallback": "/img/screenshots/pwa-recipes/homepage.png"
            },
            {
                "src": "/img/screenshots/pwa-recipes/install-prompt.webp",
                "fallback": "/img/screenshots/pwa-recipes/install-prompt.png"
            },
            {
                "src": "/img/screenshots/pwa-recipes/subscribing.webp",
                "fallback": "/img/screenshots/pwa-recipes/subscribing.png"
            },
            {
                "src": "/img/screenshots/pwa-recipes/notification-actions.webp",
                "fallback": "/img/screenshots/pwa-recipes/notification-actions.png"
            }
        ] 
    },
    {
        "title": "Cooksurfing",
        "id": "cooksurfing",
        "subtitle": "Dinner Hosting platform",
        "description": "Cooksurfing is a web app dinner hosting platform based on the sharing economy concept",
        "tools_used": ["Node.js", "Express.js", "MongoDB", "Mongoose.js", "GridFS", "Handlebars.js", "JWT", "Passport", "Service Workers", "Require AMD", "Gulp", "Nodemon", "Javascript", "Google Maps API", "CSS3", "SASS"],
        "url": "https://www.cooksurfing.eu/profile/mona",
        "github_repo_name": "cooksurfing",
        "share_description": "Check out my repository Cooksurfing web-app!",
        "frameworksImages": [
            {"src": "/img/logos/node-logo.svg"},
            {"src": "/img/logos/pwa-logo.svg"}
        ],
        "animation": {
            "webm" : "/img/screenshots/cooksurfing/requesting.webm",
            "mp4" : "/img/screenshots/cooksurfing/requesting.mp4"
        },
        "images": [
            {
                "src": "/img/screenshots/cooksurfing/cooksurfing.webp",
                "fallback": "/img/screenshots/cooksurfing/cooksurfing.png"
            },
            {
                "src": "/img/screenshots/cooksurfing/dashboard.webp",
                "fallback": "/img/screenshots/cooksurfing/dashboard.png"
            },
            {
                "src": "/img/screenshots/cooksurfing/dashboard_2.webp",
                "fallback": "/img/screenshots/cooksurfing/dashboard_2.png"
            },
            {
                "src": "/img/screenshots/cooksurfing/searchResults.webp",
                "fallback": "/img/screenshots/cooksurfing/searchResults.png"
            }
        ] 
    },
    {
        "title": "Be Romantic",
        "id": "beromantic",
        "subtitle": "Fashion Designer's website",
        "description": "This statically generated website was built as a result of a freelancing project. The client was a fashion designer and so showing her collections' pictures in high resolution was an important matter. The website is loaded with pictures so I needed to use something more sophisticated in order to compensate for the picture download speed and quality. So I have used Gatbsy and the gatsby sharp plugin in order to server quality adaptive images for low speed networks without losing the quality or damaging the user experience.",
        "tools_used": ["Gatsby.js", "React.js", "GraphQL", "Prismic", "CMS", "Node.js", "Javascript", "ES6", "CSS3"],
        "url": "https://beromantic.es",
        "github_repo_name": "beromantic",
        "share_description": "Check out this cool fashion designer site built by Gatsby.js!",
        "frameworksImages": [
            {"src": "/img/logos/graphql-logo.svg"},
            {"src": "/img/logos/react-logo.svg"}
        ],
        "animation": {
            "webm": "/img/screenshots/beromantic/beromantic.webm",
            "mp4": "/img/screenshots/beromantic/beromantic.mp4"
        },
        "images": [
            {
                "src": "/img/screenshots/beromantic/beromantic-1.webp",
                "fallback": "/img/screenshots/beromantic/beromantic-1.png"
            },
            {
                "src": "/img/screenshots/beromantic/beromantic-2.webp",
                "fallback": "/img/screenshots/beromantic/beromantic-2.png"
            },
            {
                "src": "/img/screenshots/beromantic/beromantic-3.webp",
                "fallback": "/img/screenshots/beromantic/beromantic-3.png"
            },
            {
                "src": "/img/screenshots/beromantic/beromantic-4.webp",
                "fallback": "/img/screenshots/beromantic/beromantic-4.png"
            }
        ] 
    },
    {
        "title": "Chat App",
        "id": "node-chat-app",
        "subtitle": "Chat web app built on socket.io",
        "description": "This Chat App was built as a design concept taking advantage of web sockets to send, receive and broadcast messages between the user and a Node server. The app provides different rooms you can enter by typing the name of the room and a custom username.",
        "tools_used": ["Node.js", "Socket.io", "Express.js", "Mocha", "Nodemon", "Giphy API", "Javascript", "Google Maps API", "CSS3"],
        "url": "https://web-app-chat.herokuapp.com",
        "github_repo_name": "node-chat-app",
        "share_description": "Check out this awesome web Chat App!",
        "frameworksImages": [
            {"src": "/img/logos/node-logo.svg"},            
            {"src": "/img/logos/socket.io-logo.svg"}            
        ],
        "animation": {
            "webm": "/img/screenshots/node-chat-app/web-app-chat.webm",
            "mp4": "/img/screenshots/node-chat-app/web-app-chat.mp4"
        },
        "images": [
            {
                "src": "/img/screenshots/node-chat-app/chat_2.webp",
                "fallback": "/img/screenshots/node-chat-app/chat_2.png"
            },
            {
                "src": "/img/screenshots/node-chat-app/chat.webp",
                "fallback": "/img/screenshots/node-chat-app/chat.png"
            },
            {
                "src": "/img/screenshots/node-chat-app/webapp.webp",
                "fallback": "/img/screenshots/node-chat-app/webapp.png"
            }
        ] 
    },
    {
        "title": "Animath",
        "id": "animath",
        "subtitle": "Learn Mathematics by scrolling",
        "description": "The goal was to create an interactive interface by which the user can scroll to go to the next explanation of a mathematical model. The interface uses complex animations to achieve easy understanding of mathematical concepts, in an attempt to simplify the complexity of mathematics!",
        "tools_used": ["SVG", "JavaScript", "jQuery", "ScrollMagic.js", "GSAP", "TweenMax.js"],
        "url": "https://animath.herokuapp.com/",
        "github_repo_name": "animath",
        "share_description": "Check out Animath. Learn mathematics through animations by scrolling!",
        "frameworksImages": [
            {"src": "/img/logos/gsap-logo.svg"},            
            {"src": "/img/logos/svg-logo.svg"}
        ],
        "animation": {
            "webm": "/img/screenshots/animath/limits_demo.webm",
            "mp4": "/img/screenshots/animath/limits_demo.mp4"
        },
        "images": [
            {
                "src": "/img/screenshots/animath/sequences_demo.gif",
                "fallback": "/img/screenshots/animath/sequences_demo.gif"
            },
            {
                "src": "/img/screenshots/animath/limits.webp",
                "fallback": "/img/screenshots/animath/limits.png"
            },
            {
                "src": "/img/screenshots/animath/sequences.webp",
                "fallback": "/img/screenshots/animath/sequences.png"
            }
        ] 
    },
    {
        "title": "French Bot",
        "id": "french-bot",
        "subtitle": "Teaches you French vocabulary",
        "description": "The French Bot was created as a friendly interface which shows random french words on the screen and expects the translation in English. The French word is then translated using the Yandex translation API which returns the word in English. It is then compared to the user's input word and saves the result. The game repeats over a number of times and when the game finishes it outputs the progress of the user with the correct translation to each wrong answer.",
        "tools_used": ["Yandex API", "JavaScript", "csv"],
        "url": "/french-bot",
        "github_repo_name": "french-bot",
        "share_description": "Check out my repository French Bot for learning some French vocabulary!",
        "frameworksImages": [
            {"src": "/img/logos/js-logo.svg"},            
            {"src": "/img/logos/css3-logo.svg"}
        ],
        "animation": {
            "webm": "/img/screenshots/french-bot/french_bot_demo.webm",
            "mp4": "/img/screenshots/french-bot/french_bot_demo.mp4"
        },
        "images": [
            {
                "src": "/img/screenshots/french-bot/french_bot.webp",
                "fallback": "/img/screenshots/french-bot/french_bot.png"
            },
            {
                "src": "/img/screenshots/french-bot/french_bot_correct.webp",
                "fallback": "/img/screenshots/french-bot/french_bot_correct.png"
            },
            {
                "src": "/img/screenshots/french-bot/french_bot_wrong.webp",
                "fallback": "/img/screenshots/french-bot/french_bot_wrong.png"
            },
            {
                "src": "/img/screenshots/french-bot/french_bot_results.webp",
                "fallback": "/img/screenshots/french-bot/french_bot_results.png"
            }
        ] 
    }
]